// Generated by CoffeeScript 1.8.0
(function() {
  var address, assert, help, invite, ip, port, pubkey, suite, vows;

  vows = require('vows');

  assert = require('assert');

  help = require('../lib/helpers');

  invite = require('../lib/invite');

  address = require('../lib/address');

  ip = "1.2.3.4";

  port = 5678;

  pubkey = help.randomBytes(help.nacl.box.publicKeyLength);

  address = new address({
    ip: ip,
    port: port,
    publicKey: pubkey
  });

  suite = vows.describe("Pink Invite");

  suite.addBatch({
    "generate": {
      topic: new invite(address),
      "makes string": function(obj) {
        return assert.equal(typeof (obj.toString()), 'string');
      },
      "parse": {
        topic: function(obj) {
          return invite.parse(obj.toString());
        },
        "lossless": function(obj) {
          return assert.equal(address, obj.address.toString());
        }
      },
      "parse failure": {
        topic: function(obj) {
          return invite.parse("" + obj + "a");
        },
        "false output": function(obj) {
          return assert.isFalse(obj);
        }
      }
    },
    "verify": {
      "empty": function() {
        return assert.isFalse(invite.verify(''));
      },
      "words": function() {
        return assert.isFalse(invite.verify('i like you'));
      },
      "valid": function() {
        return assert.isTrue(invite.verify("" + (new invite(address))));
      },
      "number": function() {
        return assert.isFalse(invite.verify(5));
      },
      "buffer": function() {
        return assert.isFalse(invite.verify(new Buffer("" + (new invite(address)))));
      },
      "append": function() {
        return assert.isFalse(invite.verify("" + (new invite(address)) + "4"));
      },
      "prepend": function() {
        return assert.isFalse(invite.verify("5" + (new invite(address))));
      }
    }
  });

  suite.run();

}).call(this);
